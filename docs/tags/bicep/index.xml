<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bicep on theAutomationDude</title>
    <link>https://theautomationdude.github.io/blog/tags/bicep/</link>
    <description>Recent content in Bicep on theAutomationDude</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 26 Mar 2022 15:24:45 +0100</lastBuildDate><atom:link href="https://theautomationdude.github.io/blog/tags/bicep/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Policies, the basics</title>
      <link>https://theautomationdude.github.io/blog/posts/azurepolicybasics/</link>
      <pubDate>Sat, 26 Mar 2022 15:24:45 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/azurepolicybasics/</guid>
      <description>When an organization decides to provision applications and infrastructure components in the cloud, security has to be taken into consideration. To mitigate human security mistakes it can be wise to put some guardrails around your cloud environments. The amounts of guardrails chosen depends on organisation size, developer experience level and security posture, as well as network topologies and possible connections to the on-premise company systems. In Azure, the Azure policies allow you to reduce the risk of having your environment being compromised by human error and risky configurations, either unintended or with malicious intent.</description>
    </item>
    
    <item>
      <title>Azure Roles</title>
      <link>https://theautomationdude.github.io/blog/posts/azureroles/</link>
      <pubDate>Sat, 12 Feb 2022 10:10:45 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/azureroles/</guid>
      <description>In Azure, access and control of any resources is managed through Role based access control (RBAC). By being assinged a role, a user will be able to access or manage different aspects of a resource and it&amp;rsquo;s subordinate resources.
This guide depends on the following:    Tool Link     Azure Bicep Cli Bicep Cli install instructions   VSCode + Bicep Extension Getting Up And Ready With VSCode and VSCode Productivity hints   Azure Powershell Setup Azure Powershell    Azure Account Register Free Azure Account     Scopes The roles will be given permissions on a Scope.</description>
    </item>
    
    <item>
      <title>Deploying Azure Subscriptions, as Code</title>
      <link>https://theautomationdude.github.io/blog/posts/deployazsubscriptionsascode/</link>
      <pubDate>Sat, 29 Jan 2022 15:09:14 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/deployazsubscriptionsascode/</guid>
      <description>An Azure Subscription is a boundary in Azure for billing and also an access management boundary. Usually a subscription has one or more owners that will have control over spending and assigning access to resources and resource groups in that subscription. In large organisations there may be a lot of development teams sharing the same Azure tenant, but each team may have one or more subscriptions in the tenant. That will separate their workloads and billing while still allowing them to share the user identities, some hub networking and other services that may be accessed through a hub network.</description>
    </item>
    
    <item>
      <title>Azure Management Groups, as Code</title>
      <link>https://theautomationdude.github.io/blog/posts/managementgroups/</link>
      <pubDate>Tue, 11 Jan 2022 22:05:32 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/managementgroups/</guid>
      <description>This guide will give you an introduction to use Management Groups in Azure and how to create them as code. If you want to try this out yourself as a lab, you must first ensure that you have the pre-requisites ready.
This guide depends on the following:    Tool Link     Azure Bicep Cli Bicep Cli install instructions   VSCode + Bicep Extension Getting Up And Ready With VSCode and VSCode Productivity hints   Azure Powershell Setup Azure Powershell    Azure Account Register Free Azure Account    User account with sufficient privileges to create Management Groups in the Tenant Root group Register Free Azure Account (See the &amp;ldquo;Enable Management Groups&amp;rdquo; section)    ManagementGroup Structure ManagementGroups are basically containers that contains your organisations subscriptions.</description>
    </item>
    
    <item>
      <title>Getting up and ready with VSCode</title>
      <link>https://theautomationdude.github.io/blog/posts/gettingupandreadywithvscode/</link>
      <pubDate>Sun, 12 Dec 2021 09:48:44 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/gettingupandreadywithvscode/</guid>
      <description>When you are authoring or editing any type of code or markdown text, VSCode can be a powerfull ally. It will give you syntaxt highlighting and intellisense for most modern programming languages and there is a wide set of extensions to make your life easier. If that wasn&amp;rsquo;t enough, VSCode also has built-in support for Git, meaning that you don&amp;rsquo;t need to learn all the Git commandline syntax and you get a visualization of your branches, commits, staged changes and stash.</description>
    </item>
    
  </channel>
</rss>
