<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>theAutomationDude</title>
    <link>https://theautomationdude.github.io/blog/</link>
    <description>Recent content on theAutomationDude</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 29 Jan 2022 15:09:14 +0100</lastBuildDate><atom:link href="https://theautomationdude.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying Azure Subscriptions, as Code</title>
      <link>https://theautomationdude.github.io/blog/posts/deployazsubscriptionsascode/</link>
      <pubDate>Sat, 29 Jan 2022 15:09:14 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/deployazsubscriptionsascode/</guid>
      <description>An Azure Subscription is a boundary in Azure for billing and also an access management boundary. Usually a subscription has one or more owners that will have control over spending and assigning access to resources and resource groups in that subscription. In large organisations there may be a lot of development teams sharing the same Azure tenant, but each team may have one or more subscriptions in the tenant. That will separate their workloads and billing while still allowing them to share the user identities, some hub networking and other services that may be accessed through a hub network.</description>
    </item>
    
    <item>
      <title>Azure Management Groups, as Code</title>
      <link>https://theautomationdude.github.io/blog/posts/managementgroups/</link>
      <pubDate>Tue, 11 Jan 2022 22:05:32 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/managementgroups/</guid>
      <description>This guide will give you an introduction to use Management Groups in Azure and how to create them as code. If you want to try this out yourself as a lab, you must first ensure that you have the pre-requisites ready.
This guide depends on the following:    Tool Link     Azure Bicep Cli Bicep Cli install instructions   VSCode + Bicep Extension Getting Up And Ready With VSCode and VSCode Productivity hints   Azure Powershell Setup Azure Powershell    Azure Account Register Free Azure Account    User account with sufficient privileges to create Management Groups in the Tenant Root group Register Free Azure Account (See the &amp;ldquo;Enable Management Groups&amp;rdquo; section)    ManagementGroup Structure ManagementGroups are basically containers that contains your organisations subscriptions.</description>
    </item>
    
    <item>
      <title>Register and setup a free Azure Account</title>
      <link>https://theautomationdude.github.io/blog/posts/registerfreeazureaccount/</link>
      <pubDate>Mon, 10 Jan 2022 21:03:06 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/registerfreeazureaccount/</guid>
      <description>Register a Microsoft account If you don&amp;rsquo;t have a Microsoft account or simply want a separate account for learning, go to https://outlook.live.com/ to register a new account.
  Install Microsoft Authenticator on your mobile device https://www.microsoft.com/en-us/security/mobile-authenticator-app
  Sign in to your Microsoft account. Click the account icon in the top right corner of outlook and enter the profile settings for your account. Then choose Security from the menu in the top of the page.</description>
    </item>
    
    <item>
      <title>VSCode productivity features and keyboard shortcuts</title>
      <link>https://theautomationdude.github.io/blog/posts/vscodeproductivity/</link>
      <pubDate>Mon, 27 Dec 2021 15:30:22 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/vscodeproductivity/</guid>
      <description>When you get used to VSCode you will experience a boos to your productivity. Some repetitive tasks when writing code are drastically reduced, with language support, intellisense and more, you don&amp;rsquo;t even need to remember the syntax very well. Keyboard shortcuts is another important feature when coding, since you don&amp;rsquo;t want to take your hands off the keyboard to use the mouse too often.
Keyboard Shortcuts There is a keyboard shortcuts reference as https://code.</description>
    </item>
    
    <item>
      <title>Using Git version control in VSCode</title>
      <link>https://theautomationdude.github.io/blog/posts/gitinvscode/</link>
      <pubDate>Thu, 16 Dec 2021 21:48:27 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/gitinvscode/</guid>
      <description>In a previous post I wrote about how to install git on the windows operating system. And another post was about how to get up and running with VSCode. This post will cover some basics on how to work with git, especially in VSCode.
To contribute to a software project, you can clone a repository and then push new code that you have authored to it. Normally this is done by working in different branches, where the main or master branch normally contains the version of the code that will be pushed to the production environment, while all developers work in other branches that get merged into the master/main branch.</description>
    </item>
    
    <item>
      <title>Getting up and ready with VSCode</title>
      <link>https://theautomationdude.github.io/blog/posts/gettingupandreadywithvscode/</link>
      <pubDate>Sun, 12 Dec 2021 09:48:44 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/gettingupandreadywithvscode/</guid>
      <description>When you are authoring or editing any type of code or markdown text, VSCode can be a powerfull ally. It will give you syntaxt highlighting and intellisense for most modern programming languages and there is a wide set of extensions to make your life easier. If that wasn&amp;rsquo;t enough, VSCode also has built-in support for Git, meaning that you don&amp;rsquo;t need to learn all the Git commandline syntax and you get a visualization of your branches, commits, staged changes and stash.</description>
    </item>
    
    <item>
      <title>Install Git version control on a Windows PC</title>
      <link>https://theautomationdude.github.io/blog/posts/installgit/</link>
      <pubDate>Tue, 07 Dec 2021 17:44:31 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/installgit/</guid>
      <description>Whether you are developing applications, scripts or authoring Infrastructure As Code such as ARM, Bicep, Cloudformation, Google Cloud Deployment Manager or Terraform -templates, version control is important and at the heart of the DevOps toolkit. The most popular and widely adopted version control tool is Git, developed by Linus Torvalds – the inventor of the Linux kernel.
If you work in VSCode, you won&amp;rsquo;t need to learn the git-cli commands, since VSCode has built-in support for git.</description>
    </item>
    
    <item>
      <title>How setup Powershell for Azure</title>
      <link>https://theautomationdude.github.io/blog/posts/setupazpowershell/</link>
      <pubDate>Thu, 02 Dec 2021 17:22:08 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/setupazpowershell/</guid>
      <description>If you are using the Azure Cloud shell, you already have a useful powershell environment setup for you there by Microsoft&amp;hellip;
But it&amp;rsquo;s not that unusual that employers want to keep all your code in a repo that is company controlled and where your teammates can access your files, and that repo may not always be directly accessible from the cloud shell.
For that purpose, you might want to setup your own Powershell environment on the computer you work from.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://theautomationdude.github.io/blog/about/</link>
      <pubDate>Mon, 29 Nov 2021 21:09:00 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/about/</guid>
      <description>Whoami I&amp;rsquo;m an automation dude and IT professional with more than 20 years experience. theAutomationDude sounds kewl and all, but my real name is Peter Östman and I live south of Stockholm - Sweden.
I got a background in traditional IT Infrastructure, architecture and security. The latter part of my career has centered around automation, cloud and devops.
The Blog In this blog I&amp;rsquo;ll share my thoughs related to just about anything cloud, code, devops and IT in general, basically anything that comes to mind.</description>
    </item>
    
    <item>
      <title>What are the reasons for cloud adoption?</title>
      <link>https://theautomationdude.github.io/blog/posts/whycloud/</link>
      <pubDate>Mon, 22 Nov 2021 12:22:08 +0100</pubDate>
      
      <guid>https://theautomationdude.github.io/blog/posts/whycloud/</guid>
      <description>The truth is, there are many reasons to use a cloud service, and the priority of those reasons will vary from case to case. But it&amp;rsquo;s important to know these reasons, and how you prioritize them, since they are the drivers of the cloud journey. By understanding which reasons that are most important to your mission, it will help your decision-making process.
Some examples of decisions impacted by these drivers:</description>
    </item>
    
  </channel>
</rss>
